<div class="container mx-auto p-4 bg-white">
  <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
    <!-- Left: Product Image -->
    <div class="w-full px-4 mb-8">
        <img src="<%= product.img[0] %>" alt="<%= product.name %>"
                    class="w-full h-auto rounded-lg shadow-md mb-4" id="mainImage">
        <div class="flex gap-4 py-4 justify-center overflow-x-auto">
          <% product.img.forEach(function(thumbnail, index) { %>
            <img src="<%= thumbnail %>" alt="Thumbnail 1"
                          class="size-16 sm:size-20 object-cover rounded-md cursor-pointer opacity-60 hover:opacity-100 transition duration-300 thumbnail"
            >
          <% }); %>
        </div>
    </div>

    <!-- Right: Product Details -->
    <div class="p-4">
      <h1 class="text-4xl font-semibold text-gray-900"><%= product.name %></h1>

      <p class="text-2xl font-extrabold text-gray-800 mb-2">Price: $<%= product.price %> USD</p>
      <p class="text-md text-gray-600 mb-4">Gender: <span class="font-semibold"><%= product.gender %></span></p>

      <% if (product.status === "On Stock") { %>
        <% if (product.sizes && product.sizes.length > 0) { %>
          <!-- Size Selection -->
          <div class="mt-4 text-black">
            <label class="block font-semibold text-gray-800 mb-2">Select Size:</label>
            <div class="flex gap-2">
              <% product.sizes.forEach(size => { %>
                <button 
                  type="button" 
                  class="px-4 py-2 rounded-full border border-gray-300 text-gray-700 hover:bg-gray-200 focus:bg-gray-400 focus:text-white transition"
                  data-size="<%= size %>"
                  aria-label="Select size <%= size %>"
                >
                  <%= size %>
                </button>
              <% }); %>
            </div>
          </div>
        <% } %>

        <!-- Add to Cart Form -->
        <form class="mt-4" id="addToCartForm">
          <input type="hidden" name="productId" value="<%= product._id %>" />
          <input type="hidden" name="size" id="selectedSize" />
          <button 
            type="submit" 
            class="bg-green-500 text-white font-bold py-2 px-6 rounded-lg hover:bg-green-600 transition duration-200"
          >
            Add to Cart
          </button>
        </form>
      <% } else { %>
        <!-- Status Message -->
        <p class="text-md text-red-600 font-semibold mt-4">
          <% if (product.status === "Out Of Stock") { %>
            This product is currently out of stock.
          <% } else if (product.status === "Suspend") { %>
            This product is temporarily unavailable for purchase.
          <% } %>
        </p>

        <!-- Disabled Add to Cart Button -->
        <button 
          type="button" 
          class="bg-gray-400 text-white font-bold py-2 px-6 rounded-lg cursor-not-allowed"
          disabled
        >
          Add to Cart
        </button>
      <% } %>


      <!-- Alert Message -->
      <div id="alert-1" class="flex items-center p-4 mt-4 mb-4 text-green-700 rounded-lg bg-green-100 border-green-500 " role="alert" style="display: none;">
        <svg class="flex-shrink-0 w-4 h-4" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20">
          <path d="M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5ZM9.5 4a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3ZM12 15H8a1 1 0 0 1 0-2h1v-3H8a1 1 0 0 1 0-2h2a1 1 0 0 1 1 1v4h1a1 1 0 0 1 0 2Z"/>
        </svg>
        <span class="sr-only">Info</span>
        <div class="ms-3 text-sm font-medium" id="alert-message">
          <!-- Dynamic message will go here -->
        </div>
        <button id="alert-dismiss" type="button" class="ms-auto -mx-1.5 -my-1.5 border-green-500 bg-green-100 text-green-700 rounded-lg focus:ring-2 focus:ring-green-400 p-1.5 hover:bg-gray-700 inline-flex items-center justify-center h-8 w-8" data-dismiss-target="#alert-1" aria-label="Close" onclick="document.getElementById('alert-1').style.display = 'none';">
          <span class="sr-only">Close</span>
          <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 14">
            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"/>
          </svg>
        </button>
      </div>

      <hr class="my-6 md:my-8 border-gray-200 dark:border-gray-800" />

      <p class="text-lg text-gray-700 mb-4"><%= product.desc %></p>
    </div>
  </div>
</div>

<%- include('review') %>

<%- include('related-products') %>

<script>
  const mainImage = document.getElementById('mainImage');
  const thumbnails = document.querySelectorAll('.thumbnail');

  thumbnails.forEach(thumbnail => {
    thumbnail.addEventListener('click', function() {
      mainImage.src = this.src;
    });
  });
  
  // JavaScript to handle size selection, quantity adjustment, and form validation
  document.querySelectorAll("[data-size]").forEach(button => {
    button.addEventListener("click", () => {
      document.querySelectorAll("[data-size]").forEach(btn => btn.classList.remove("bg-gray-400", "text-white"));
      button.classList.add("bg-gray-400", "text-white");

      // Set the selected size to the hidden input field
      const selectedSize = button.getAttribute("data-size");
      document.getElementById("selectedSize").value = selectedSize;
    });
  });

  // const quantityInput = document.getElementById("quantity");
  // document.getElementById("decreaseQty").addEventListener("click", () => {
  //   if (quantityInput.value > 1) quantityInput.value--;
  // });
  // document.getElementById("increaseQty").addEventListener("click", () => {
  //   quantityInput.value++;
  // });
  document.addEventListener("DOMContentLoaded", () => {
    const addToCartForm = document.getElementById("addToCartForm");

    addToCartForm.addEventListener("submit", async (event) => {
      event.preventDefault();
      const productId = document.querySelector("input[name='productId']").value;
      const size = document.getElementById("selectedSize").value;

      if (!size) {
        alert("Please select a size before adding to cart.");
        return;
      }

      try {
        console.log(JSON.stringify({ productId, size }))
        const response = await fetch("/cart/add", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ productId, size }),
        });

        //console.log("Response status:", response.status);
        const data = await response.json();
        //console.log("Response data:", data);

        if (!response.ok) {
          showAlert(data.message || "Error adding to cart. Please try again later.", "error");
        } else {
          showAlert("Product added to cart successfully!", "success");
        }
        console.log("Product added to cart successfully!");
      } catch (err) {
        console.error("Error adding to cart:", error.message, error.stack);
      }
    });
  });

  // Show alert message function
  function showAlert(message, type) {
    const alertMessage = document.getElementById('alert-message');
    const alertBox = document.getElementById('alert-1');
    const alertButton = document.getElementById('alert-dismiss');
    alertMessage.innerHTML = message;

    if (type === 'success') {
      alertBox.classList.add('focus:ring-green-400', 'text-green-700', 'bg-green-100', 'border-green-500');
      alertBox.classList.remove('focus:ring-red-400', 'text-red-700', 'bg-red-100', 'border-red-500');
      alertButton.classList.add('focus:ring-green-400', 'text-green-700', 'bg-green-100', 'border-green-500');
      alertButton.classList.remove('focus:ring-red-400', 'text-red-700', 'bg-red-100', 'border-red-500');
    } else {
      alertBox.classList.add('focus:ring-red-400', 'text-red-700', 'bg-red-100', 'border-red-500');
      alertBox.classList.remove('focus:ring-green-400', 'text-green-700', 'bg-green-100', 'border-green-500');
      alertButton.classList.add('focus:ring-red-400', 'text-red-700', 'bg-red-100', 'border-red-500');
      alertButton.classList.remove('focus:ring-green-400', 'text-green-700', 'bg-green-100', 'border-green-500');
    }

    alertBox.style.display = 'flex';
  }
</script>
